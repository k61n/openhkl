variables:
  DEBIAN_FRONTEND: noninteractive

stages:
  - build
  - test
  - deploy:doc
  - bundling
  - upload
  - release

build:rocky9:
  stage: build
  image: iffregistry.fz-juelich.de/neutron-simlab/openhkl/rocky9-ohkl-env
  script:
    - |
      if test $CI_PIPELINE_SOURCE == "nightly"
      then
          cmake -B build -D OHKL_FULL_WORKFLOW_TEST=ON -D CMAKE_BUILD_TYPE=Release
      else
          cmake -B build -D CMAKE_BUILD_TYPE=Release
      fi
    - cmake --build build --parallel 8
  artifacts:
    paths:
      - build
    expire_in: 1 day

build:macos:
  stage: build
  parallel:
    matrix:
      - { ARCH: "arm64", }
      - { ARCH: "intel", }
  tags:
    - darwin, $ARCH, ventura
  script:
    - mkdir build && cd build
    - /opt/homebrew/bin/cmake ..
      -GNinja
      -DCMAKE_BUILD_TYPE=Release
      -DBUILD_TESTING=OFF
      -DCMAKE_PREFIX_PATH="/opt/homebrew/opt/qt@5;/opt/homebrew"
      -DCMAKE_IGNORE_PATH=/usr/local
      -DCMAKE_IGNORE_PREFIX_PATH=/usr/local
      -DCMAKE_SYSTEM_IGNORE_PATH=/usr/local
      -DCMAKE_SYSTEM_IGNORE_PREFIX_PATH=/usr/local
      -DCMAKE_CXX_FLAGS="-I/opt/homebrew/include"
    - /opt/homebrew/bin/cmake --build . --parallel $(sysctl -n hw.ncpu)

build:windows:
  stage: build
  tags:
    - win, x64
  script:
    - mkdir build
    - cd build
    - $env:Path = "C:\msys64\mingw64\bin;" + $env:Path
    - cmake ..
      -DCMAKE_C_COMPILER=gcc
      -DCMAKE_CXX_COMPILER=g++
      -GNinja
      -DCMAKE_BUILD_TYPE=Release
      -DBUILD_TESTING=OFF
      -DBUILD_WITH_QT6=ON
      -DCMAKE_PREFIX_PATH=C:/msys64/mingw64
    - cmake --build . --parallel $env:NUMBER_OF_PROCESSORS

test:rocky9:
  stage: test
  image: iffregistry.fz-juelich.de/neutron-simlab/openhkl/rocky9-ohkl-env
  timeout: 3 hours
  script:
    - cd build
    - |
      if test $CI_PIPELINE_SOURCE == "nightly"
      then
          ctest --output-on-failure -L "nightly"
      else
          ctest -j8 --output-on-failure -E "nightly"
      fi

pages:
  stage: deploy:doc
  image: iffregistry.fz-juelich.de/neutron-simlab/openhkl/rocky9-ohkl-env
  script:
    - cd build
    - cmake ..
    - make docs
    - mv doc/sphinx/html ../public/
    - mv doc/sphinx/_static/* ../public/_static/
  artifacts:
    paths:
      - public
  only:
    - main

bundle:macos:
  stage: bundling
  dependencies: []
  parallel:
    matrix:
      - { ARCH: "arm64", }
      - { ARCH: "intel", }
  tags:
    - darwin, $ARCH, ventura
  only:
    - tags@neutron-simlab/openhkl
  script:
    - mkdir build && cd build
    - /opt/homebrew/bin/cmake
      ..
      -GNinja
      -DCMAKE_BUILD_TYPE=Release
      -DBUILD_TESTING=OFF
      -DCMAKE_PREFIX_PATH="/opt/homebrew/opt/qt@5;/opt/homebrew"
      -DCMAKE_IGNORE_PATH=/usr/local
      -DCMAKE_IGNORE_PREFIX_PATH=/usr/local
      -DCMAKE_SYSTEM_IGNORE_PATH=/usr/local
      -DCMAKE_SYSTEM_IGNORE_PREFIX_PATH=/usr/local
      -DCMAKE_CXX_FLAGS="-I/opt/homebrew/include"
    - /opt/homebrew/bin/cmake --build . --parallel $(sysctl -n hw.ncpu)
    - /opt/homebrew/opt/qt@5/bin/macdeployqt main/OpenHKL.app -verbose=3
    - ../install/macos/relink.sh main/OpenHKL.app/Contents/Frameworks
    - codesign --deep --force --verify --verbose --sign "openhkl" main/OpenHKL.app
    - if [ -d "/Volumes/openhkl" ]; then hdiutil detach /Volumes/openhkl; fi
    - hdiutil create -size 500m -fs HFS+ -volname "openhkl" -attach ./openhkl.dmg
    - mv main/OpenHKL.app /Volumes/openhkl
    - ln -s /Applications /Volumes/openhkl/Applications
    - rm -rf /Volumes/openhkl/.fseventsd
    - hdiutil detach /Volumes/openhkl
    - hdiutil convert ./openhkl.dmg -format UDZO -o openhkl-$CI_COMMIT_TAG-$ARCH.dmg
    - mv openhkl-$CI_COMMIT_TAG-$ARCH.dmg ../
  artifacts:
    paths:
      - openhkl-$CI_COMMIT_TAG-$ARCH.dmg

bundle:windows:
  stage: bundling
  dependencies: []
  tags:
    - win, x64
  only:
    - tags@neutron-simlab/openhkl
  script:
    - $env:Path = "C:\Qt\Tools\QtInstallerFramework\4.8\bin;" + $env:Path
    - $env:Path = "C:\msys64\mingw64\bin;" + $env:Path
    - mkdir build
    - cd build
    - cmake ..
      -DCMAKE_C_COMPILER=gcc
      -DCMAKE_CXX_COMPILER=g++
      -GNinja
      -DCMAKE_BUILD_TYPE=Release
      -DBUILD_TESTING=OFF
      -DBUILD_WITH_QT6=ON
      -DCMAKE_PREFIX_PATH=C:/msys64/mingw64
    - cmake --build . --parallel $env:NUMBER_OF_PROCESSORS
    - cd ..
    - copy build\main\OpenHKL.exe install\windows\packages\com.openhkl\data
    - windeployqt6 install\windows\packages\com.openhkl\data\OpenHKL.exe
    - Get-Content "install\windows\dll_list.txt" | ForEach-Object {
        Copy-Item "C:\msys64\mingw64\bin\$_" -Destination "install\windows\packages\com.openhkl\data"
      }
    - mkdir install\windows\packages\com.openhkl\data\icons
    - copy main\images\icons\OpenHKL.ico install\windows\packages\com.openhkl\data\icons
    - Copy-Item -Path data\instruments -Destination install\windows\packages\com.openhkl\data -Recurse
    - binarycreator -c install\windows\config\config.xml -p install\windows\packages openhkl-$CI_COMMIT_TAG-x64.exe --verbose
  artifacts:
    paths:
      - openhkl-$CI_COMMIT_TAG-x64.exe

upload:
  stage: upload
  image: curlimages/curl:latest
  only:
    - tags@neutron-simlab/openhkl
  script:
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./openhkl-$CI_COMMIT_TAG-arm64.dmg "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/openhkl-${CI_COMMIT_TAG}-arm64.dmg"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./openhkl-$CI_COMMIT_TAG-intel.dmg "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/openhkl-${CI_COMMIT_TAG}-intel.dmg"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file ./openhkl-$CI_COMMIT_TAG-x64.exe "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/openhkl-${CI_COMMIT_TAG}-x64.exe"'
  needs: ["bundle:macos: [arm64]",
          "bundle:macos: [intel]",
          "bundle:windows"]

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  only:
    - tags@neutron-simlab/openhkl
  script:
    - echo "Release CI stage for $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    name: $CI_COMMIT_TAG
    description: 'Release created using the release-cli.'
    assets:
      links:
        - name: 'openhkl-$CI_COMMIT_TAG-arm64.dmg'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/openhkl-${CI_COMMIT_TAG}-arm64.dmg'
        - name: 'openhkl-$CI_COMMIT_TAG-intel.dmg'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/openhkl-${CI_COMMIT_TAG}-intel.dmg'
        - name: 'openhkl-$CI_COMMIT_TAG-x64.exe'
          url: '${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/openhkl-${CI_COMMIT_TAG}-x64.exe'
  needs: ["upload"]
