stages:
  - build

# windows:
#   tags:
#   - Windows
#   stage: build
#   script:
#     - New-Item -ItemType "directory" -Confirm:$false -Force:$true -Name "build"
#     - cd build
#     - cmd.exe "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
#     - cmake -G "Visual Studio 16 2019" -A x64 -T host=x64 -DLIB_MAN=OFF -DLIB_INSTALL=OFF -B. ..
#     - cmake --build . --config Release
#     - Get-Location
#     - dir
#     - dir Release
#     - ctest -C Release --output-on-failure

# mac:
#   tags: &unix
#   - MacOS
#   image: debian:testing
#   before_script:
#     - git clone https://jugit.fz-juelich.de/mlz/libQCR.git
#     - git clone https://jugit.fz-juelich.de/mlz/xsection.git
#     - cmake --version
#     - clang --version
#   stage: build
#   script: &scr
#     - pwd && ls
#     - cd libQCR
#     - mkdir build
#     - cd build
#     - cmake .. -DQt5_DIR=/usr/local/Cellar/qt/5.15.1/lib/cmake/Qt5
#     - make
#     - ctest
#     - make install
#     - cd ../..
#     - pwd
#     - ls
#     - cd xsection
#     - mkdir build
#     - cd build
#     - cmake ..
#     - make -j3
#     - ctest
#     - make install
#     - cd ../..
#     - pwd
#     - ls
#     - mkdir build
#     - cd build
#     - cmake .. -DCMAKE_PREFIX_PATH=/usr/local/opt/qt -DGSL_ROOT_DIR=/usr/local
#     - make -j8
#     - ctest -j8 --output-on-failure

native_Debian_clang:
  tags: &native
  - Debian
  before_script: &debian_clang
    - export CC=clang; export CXX=clang++
    - cmake --version
    - clang --version
  stage: build
  script: &native_scr
    - pwd && ls
    - mkdir build
    - cd build
    - cmake ..
    - make -j8
    - ctest -j8 --output-on-failure

# ## Dockerized:
#
# debT_clang:
#   tags: &unix
#   - Linux
#   image: debian:testing
#   before_script: &debian_clang
#     - apt-get -y update
#     - apt-get -y upgrade
#     - apt-get -y install cmake swig git
#     - apt-get -y install qtbase5-dev libqcustomplot-dev
#     - apt-get -y install libblosc-dev libgsl-dev libfftw3-dev libeigen3-dev
#     - apt-get -y install libhdf5-dev libyaml-cpp-dev libtiff-dev
#     - apt-get -y install libboost-dev
#     - apt-get -y install libqhull-dev
#     - apt-get -y install python3 python3-distutils libpython3-dev
#     - apt-get -y install python3-numpy python3-unittest2 python3-random2
#     - apt-get -y install clang
#     - apt-get -y install g++ # needed for libstdc++
#     - export CC=clang; export CXX=clang++
#     - git clone https://jugit.fz-juelich.de/mlz/libQCR.git
#     - git clone https://jugit.fz-juelich.de/mlz/xsection.git
#     - cmake --version
#     - clang --version
#   stage: build
#   script: &scr
#     - pwd && ls
#     - cd libQCR && mkdir build && cd build
#     - cmake .. && make && ctest && make install
#     - cd ../.. && pwd && ls
#     - cd xsection && mkdir build && cd build
#     - cmake .. && make -j3 && ctest && make install
#     - cd ../.. && pwd && ls
#     - mkdir build
#     - cd build
#     - cmake ..
#     - make -j8
#     - ctest -j8 --output-on-failure
#
# debT_gcc:
#   tags: *unix
#   image: debian:testing
#   before_script: &debian_gcc
#     - apt-get -y update
#     - apt-get -y upgrade
#     - apt-get -y install cmake swig git
#     - apt-get -y install qtbase5-dev libqcustomplot-dev
#     - apt-get -y install libblosc-dev libgsl-dev libfftw3-dev libeigen3-dev
#     - apt-get -y install libhdf5-dev libyaml-cpp-dev libtiff-dev
#     - apt-get -y install libboost-dev
#     - apt-get -y install libqhull-dev
#     - apt-get -y install python3 python3-distutils libpython3-dev
#     - apt-get -y install python3-numpy python3-unittest2 python3-random2
#     - apt-get -y install g++
#     - git clone https://jugit.fz-juelich.de/mlz/libQCR.git
#     - git clone https://jugit.fz-juelich.de/mlz/xsection.git
#     - cmake --version
#     - g++ --version
#   stage: build
#   script: *scr

# suse_clang:
#
#   NOTE [JWu21jun19]:
#   We suspend Suse support because of bug in libhdf5:
#     ldd on that lib shows an entry 'z' instead of the full path to the zlib.
#   Should we ever need to support Suse, then of course we could easily work around
#     this bug by explicitly calling FindZLIB, and adding ZLIB_LIBRARIES to the core link list.
#
#   tags: *unix
#   image: opensuse/tumbleweed
#   # rolling release with infinite life time
#   before_script:
#     - zypper -n patch || echo "do it again"
#     - zypper -n patch
#     - zypper -n ref
#     - zypper -n up
#     - zypper -n dup
#     - zypper -n in git cmake clang perl pkgconf libqt5-qtbase-devel blosc-devel gsl-devel fftw3-devel eigen3-devel hdf5-devel yaml-cpp-devel libtiff-devel-32bit boost-devel python3 python3-numpy python3-unittest2 python3-random2 python3-distutils-extra python3-devel swig
#     - git clone https://jugit.fz-juelich.de/mlz/libQCR.git
#     - git clone https://jugit.fz-juelich.de/mlz/xsection.git
#   stage: build
#   script: *scr
